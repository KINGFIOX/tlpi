cmake_minimum_required(VERSION 3.22)

project(tlpi)

# set(CMAKE_CXX_STANDARD 17)

# 头文件
FILE(GLOB H_FILE "${CMAKE_CURRENT_LIST_DIR}/*.h")

# 源文件
FILE(GLOB C_FILE "${CMAKE_CURRENT_LIST_DIR}/*.c")

# 生成静态库
add_library(${PROJECT_NAME} STATIC ${H_FILE} ${C_FILE})

target_link_directories(
	${PROJECT_NAME} PRIVATE # TODO PRIVATE
	${CMAKE_CURRENT_LIST_DIR}
)

target_include_directories(${PROJECT_NAME} PUBLIC
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
	$<INSTALL_INTERFACE:include>
)

# 设置输出路径
set_target_properties(${PROJECT_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/build/lib"
	LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/build/lib"
	RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/build/lib"
	PDB_OUTPUT_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/build/lib"
	PUBLIC_HEADER "include/${H_FILE}"
)

set(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/../tlpi")

set_target_properties(${PROJECT_NAME} PROPERTIES
	PUBLIC_HEADER "${H_FILE}"
)

install(
	TARGETS ${PROJECT_NAME}
	EXPORT ${PROJECT_NAME}
	ARCHIVE DESTINATION lib
	LIBRARY DESTINATION lib
	RUNTIME DESTINATION bin
	PUBLIC_HEADER DESTINATION include
)

install(
	EXPORT ${PROJECT_NAME}
	FILE "${PROJECT_NAME}Config.cmake"
	DESTINATION config
)